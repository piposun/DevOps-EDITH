pipeline {
    agent any
    tools {
        maven 'Maven 3.3.9'
        jdk 'jdk8'
    }
    environment{
        GCLOUD_PROJECT_ID = 'edith-259213'
        GCLOUD_K8S_CLUSTER_NAME = 'edith-cluster'
        GCLOUD_K8S_CONTEXT_NAME = 'edith-cluster'
    }
    stages {
        stage ('Initialize') {
            steps {
                sh'''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
        stage ('Deploy - Cluster connection') {
            steps {
                sh'gcloud container clusters get-credentials ${GCLOUD_K8S_CLUSTER_NAME} --region europe-west1-b'
            }
       	}
       	
    	stage('Application Production deployment on K8S') {
    		when{
    		    branch 'master'
    		}
    	    steps{
    	    	git 'https://github.com/piposun/DevOps-deployment'
    	    	
    	    	script {
	    	    	def filename = 'edith-deployment.yaml'
		            def data = readYaml file: filename
		            def seperator = '.'
		            def version = data.version_build[0].toString()
		                   
		            def firstVersion = version.substring(0, version.indexOf(seperator))
		            def tmp = version.substring(version.indexOf(seperator)+1, version.length())
		            def prodVersion = tmp.substring(0, tmp.indexOf(seperator))
		                    
	    	    	sh "sed -i \'s/version_build: [0-9]*.[0-9]*.[0-9]*/version_build: $firstVersion.$prodVersion.0/\' edith-deployment.yaml"
			 	    sh "sed -i s/edith:[0-9]*.[0-9]*.[0-9]*/edith:$firstVersion.$prodVersion.0/ edith-deployment.yaml"
			 	
                }
                
                sh'kubectl apply --validate=false -f edith-deployment.yaml'
                
            }
    	}
    	
    	stage('Application Development deployment on K8S') {
    		when{
    		    branch 'development'
    		}
    	    steps{
    	    	git 'https://github.com/piposun/DevOps-deployment'
    	    	sh'cat edith-deployment.yaml'
    	    	
                sh'kubectl apply --validate=false -f edith-deployment.yaml -n development'
            }
    	}
    	
    	stage('Selenium Test for Development Deployment'){
    		when{
    			branch 'development'
    		}
    		steps{
    			script{
	    		env.URL_DEV = sh(script: "kubectl get services --namespace development edith | awk '{print \$4}' | sed '1,1d'", returnStdout: true)
	    			}
	    			sh 'echo "$URL_DEV"'
	    		
        	}
        }
    	
    	stage('Scan Development deployment with Probely') {
    		when{
    			branch 'development'
    		}
      		steps {
        		probelyScan targetId: 'uPzaydsig2jo', credentialsId: 'probely-edith'
      		}
    	}
        
    }
}