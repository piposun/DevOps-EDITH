pipeline {
    agent any
    tools {
        maven 'Maven 3.3.9'
        jdk 'jdk8'
    }

    stages {
    	stage('Pipeline variable definition'){
    		steps{
    			script{
			    	def BRANCH = "master"
			    	def FIRST_VERSION = "1"
					def PROD_VERSION = "0"
					def DEV_VERSION = "0"
					def VERSION = "1.0.0"
				}
			}
		}
		
    	stage ('Read YAML file') {
            steps {
                //git 'https://github.com/piposun/DevOps-EDITH'
                script {
                    def filename = 'Deploy/edith-deployment.yaml'
                    def data = readYaml file: filename
                    def seperator = '.'
                    def version = data.version_build[0].toString()
                   
                    def firstVersion = version.substring(0, version.indexOf(seperator))
                    def tmp = version.substring(version.indexOf(seperator)+1, version.length())
                    def prodVersion = tmp.substring(0, tmp.indexOf(seperator))
                    def devVersion = tmp.substring(tmp.indexOf(seperator)+1, tmp.length())
		    
		    		FIRST_VERSION = firstVersion
                    PROD_VERSION = prodVersion
		    		DEV_VERSION = devVersion
                }
            }
        }
	
    	stage ('Init environment Master branch'){
    		when{
    		    branch 'master'
    		}
			steps{
			    sh'echo "Master branch environment initialization..."'
			    script{
			        def version = "$env.PROD_VERSION"
                    version = version.toInteger()
					version++
				
			      	PROD_VERSION = version
			    	VERSION = FIRST_VERSION + "." + PROD_VERSION + "." + DEV_VERSION
			    }
			}
    	}
    	
    	stage ('Init environment Development branch'){
    		when{
    		    branch 'development'
    		}
    		steps{
    		    sh'echo "Development branch environment initialization..."'
    		    script{
    		        env.BRANCH = "development"
					//env.VERSION = "1.0.$BUILD_NUMBER"  
			
					def version = "$env.DEV_VERSION"
                    version = version.toInteger()
					version++
				
					DEV_VERSION = version
					VERSION = FIRST_VERSION + "." + PROD_VERSION + "." + DEV_VERSION
    		    }
    		}
    	}

        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
        stage ('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        
        stage ('Docker build'){
        	steps{
        	   sh "docker build . -t eu.gcr.io/edith-259213/edith:VERSION"
        	}
        }
        
        stage ('Push the image on GCR'){
        	steps{
        	   sh 'gcloud auth configure-docker --quiet'
        	   sh "docker push eu.gcr.io/edith-259213/edith:VERSION"

        	}
        }
        
        stage ('Update image version'){
           steps{
	   	script {
	   	 	def filename = 'Deploy/edith-deployment.yaml'
	   	 	sh "sed -i \'s/version_build: [0-9]*.[0-9]*.[0-9]*/version_build: VERSION/\' $filename"
		 	sh "sed -i s/edith:[0-9]*.[0-9]*.[0-9]*/edith:VERSION/ $filename"
		 	sh "cat $filename"
		 }
           }
        }
        
        stage ('Commit/Push edit-deployment.yaml'){
           steps{
           sshagent (credentials: ['github-ssh']) { 
				sh'git add Deploy/edith-deployment.yaml'
				sh'git commit -m "Update image version (from jenkins_CI)"'
				sh"git push origin HEAD:BRANCH"
				}
           }
        }
  
        stage ('Finished'){
           steps{
				sh 'echo "Pipeline finished"'
           }
        }
    }
}
